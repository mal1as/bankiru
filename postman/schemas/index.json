{
    "swagger": "2.0",
    "info": {
        "description": "Api Documentation",
        "version": "1.0",
        "title": "Api Documentation",
        "termsOfService": "urn:tos",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0"
        }
    },
    "host": "localhost:38080",
    "basePath": "/",
    "tags": [
        {
            "name": "bank-controller",
            "description": "Bank Controller"
        },
        {
            "name": "credit-request-controller",
            "description": "Credit Request Controller"
        },
        {
            "name": "user-controller",
            "description": "User Controller"
        },
        {
            "name": "user-request-controller",
            "description": "User Request Controller"
        }
    ],
    "paths": {
        "/api/v1/bank": {
            "get": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Get all banks",
                "operationId": "getAllBanksUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "sortField",
                        "required": false,
                        "type": "string",
                        "default": "id"
                    },
                    {
                        "name": "sortDesc",
                        "in": "query",
                        "description": "sortDesc",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Bank"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Add bank",
                "description": "1. Bank id must be null\n2. Add bank with addresses, do not add credit rules here\n3. Use new address with id = null or existed address with id != null\n4. Existed addresses won't be updated",
                "operationId": "addBankUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "bank",
                        "description": "bank",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/Bank"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Update bank",
                "description": "1. Bank id must be not null\n2. Update bank with addresses, do not add credit rules here\n3. Use new address with id = null or existed address with id != null\n4. Existed addresses won't be updated",
                "operationId": "updateBankUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "bank",
                        "description": "bank",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Bank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/Bank"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/bank/{id}": {
            "get": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Get bank by id",
                "operationId": "getBankByIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/Bank"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Delete bank by id",
                "operationId": "deleteBankByIdUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/bank/{id}/address": {
            "post": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Add addresses to bank",
                "description": "1. Use new address with id = null or existed address with id != null\n2. Existed addresses won't be updated",
                "operationId": "addAddressesToBankUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "addresses",
                        "description": "addresses",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Address"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/bank/{id}/creditRule": {
            "post": {
                "tags": [
                    "bank-controller"
                ],
                "summary": "Add credit rules to bank",
                "description": "1. Only new credit rules are available to add",
                "operationId": "addCreditRulesToBankUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "creditRules",
                        "description": "creditRules",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CreditRule"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/creditRequest/status": {
            "put": {
                "tags": [
                    "credit-request-controller"
                ],
                "summary": "Update status",
                "operationId": "updateStatusUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "statusId",
                        "in": "query",
                        "description": "statusId",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/user": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Get all users",
                "operationId": "getAllUsersUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "sortField",
                        "required": false,
                        "type": "string",
                        "default": "id"
                    },
                    {
                        "name": "sortDesc",
                        "in": "query",
                        "description": "sortDesc",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Add user",
                "operationId": "addUserUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Update user",
                "operationId": "updateUserUsingPUT",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "user",
                        "description": "user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/user/{id}": {
            "get": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Get user by id",
                "operationId": "getUserByIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-controller"
                ],
                "summary": "Delete user by id",
                "operationId": "deleteUserByIdUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/userRequest": {
            "get": {
                "tags": [
                    "user-request-controller"
                ],
                "summary": "Get all user requests",
                "operationId": "getAllUserRequestsUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page",
                        "required": false,
                        "type": "integer",
                        "default": 0,
                        "format": "int32"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "description": "size",
                        "required": false,
                        "type": "integer",
                        "default": 10,
                        "format": "int32"
                    },
                    {
                        "name": "sortField",
                        "in": "query",
                        "description": "sortField",
                        "required": false,
                        "type": "string",
                        "default": "id"
                    },
                    {
                        "name": "sortDesc",
                        "in": "query",
                        "description": "sortDesc",
                        "required": false,
                        "type": "boolean",
                        "default": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRequest"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "user-request-controller"
                ],
                "summary": "Add user request",
                "description": "1. creditRequests must be null or empty",
                "operationId": "addUserRequestUsingPOST",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "userRequest",
                        "description": "userRequest",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/UserRequest"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        },
        "/api/v1/userRequest/{id}": {
            "get": {
                "tags": [
                    "user-request-controller"
                ],
                "summary": "Get user request by id",
                "operationId": "getUserRequestByIdUsingGET",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/UserRequest"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user-request-controller"
                ],
                "summary": "Delete user request by id",
                "operationId": "deleteUserRequestByIdUsingDELETE",
                "produces": [
                    "*/*"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponseDTO"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Address": {
            "type": "object",
            "properties": {
                "buildingNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "country": {
                    "type": "string"
                },
                "houseNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "officeNumber": {
                    "type": "integer",
                    "format": "int32"
                },
                "street": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                }
            },
            "title": "Address"
        },
        "Bank": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Address"
                    }
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "ownershipType": {
                    "$ref": "#/definitions/OwnershipType"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "rate": {
                    "type": "number",
                    "format": "double"
                }
            },
            "title": "Bank"
        },
        "CreditRequest": {
            "type": "object",
            "properties": {
                "bank": {
                    "$ref": "#/definitions/Bank"
                },
                "creditRule": {
                    "$ref": "#/definitions/CreditRule"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "requestStatus": {
                    "$ref": "#/definitions/RequestStatus"
                }
            },
            "title": "CreditRequest"
        },
        "CreditRule": {
            "type": "object",
            "properties": {
                "creditType": {
                    "$ref": "#/definitions/CreditType"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxPeriod": {
                    "type": "integer",
                    "format": "int64"
                },
                "maxRate": {
                    "type": "number",
                    "format": "double"
                },
                "maxSum": {
                    "type": "integer",
                    "format": "int64"
                },
                "minPeriod": {
                    "type": "integer",
                    "format": "int64"
                },
                "minRate": {
                    "type": "number",
                    "format": "double"
                },
                "minSum": {
                    "type": "integer",
                    "format": "int64"
                }
            },
            "title": "CreditRule"
        },
        "CreditType": {
            "type": "object",
            "properties": {
                "deposit": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "CreditType"
        },
        "ErrorResponseDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "stackTrace": {
                    "type": "string"
                }
            },
            "title": "ErrorResponseDTO"
        },
        "OwnershipType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "shortName": {
                    "type": "string"
                }
            },
            "title": "OwnershipType"
        },
        "RequestStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "title": "RequestStatus"
        },
        "User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "login": {
                    "type": "string"
                },
                "passwordHash": {
                    "type": "string"
                },
                "phoneNumber": {
                    "type": "string"
                },
                "userData": {
                    "$ref": "#/definitions/UserData"
                }
            },
            "title": "User"
        },
        "UserData": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "profitPerMonth": {
                    "type": "integer",
                    "format": "int64"
                },
                "surname": {
                    "type": "string"
                }
            },
            "title": "UserData"
        },
        "UserRequest": {
            "type": "object",
            "properties": {
                "creditRequests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CreditRequest"
                    }
                },
                "deposit": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "period": {
                    "type": "integer",
                    "format": "int64"
                },
                "sum": {
                    "type": "integer",
                    "format": "int64"
                },
                "user": {
                    "$ref": "#/definitions/User"
                }
            },
            "title": "UserRequest"
        }
    }
}