{
	"info": {
		"_postman_id": "313a549c-6f13-4eed-b3e6-c7d30baaf067",
		"name": "API Documentation",
		"description": "Api Documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "14192969-313a549c-6f13-4eed-b3e6-c7d30baaf067"
	},
	"item": [
		{
			"name": "api/v1",
			"item": [
				{
					"name": "bank",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get bank by id",
									"id": "db2cffe8-33e3-421c-b9ed-eedf1efde310",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"id": "e3c1a433-cb5a-451e-b736-4933c7a80758",
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"addresses\": [\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    },\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"ownershipType\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"shortName\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"rate\": \"<double>\"\n}"
										},
										{
											"id": "a4e5f297-e605-4a82-b94d-802ec561a084",
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "4d5943f6-b997-4797-8b3b-a54a1fd7dd4f",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "4ad3ed93-0ddd-486c-80ef-3c0ed470b740",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "e5ec00f2-1b05-4798-a4b6-d9a08280efbf",
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "01acfc8a-b69e-415b-940e-858f13e2a5b5",
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete bank by id",
									"id": "b659e8ea-45fa-4d46-bfa0-0eb00a992a88",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"id": "8586781d-0be6-4883-8e59-ac93bbbb1615",
											"name": "Ok",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										},
										{
											"id": "926d2e79-5a1d-4b6f-a55b-cdc42cdd8233",
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "9c1ab957-edf1-4f08-b751-9f7aab17b561",
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "86c83f63-fa63-4dba-8244-6a2dc8ac4638",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "28f9f5aa-942a-4a6e-a8d1-ab591f0c8281",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "a89d0018-9772-4aa4-b108-30eeb1389230",
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Add addresses to bank",
									"id": "651ff7f1-c7d3-48fa-b79c-70f5567cf7cc",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank/:id/address",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank",
												":id",
												"address"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										},
										"description": "1. Use new address with id = null or existed address with id != null\n2. Existed addresses won't be updated"
									},
									"response": [
										{
											"id": "218a809f-f4f1-4dec-a9f1-3682178abebf",
											"name": "Ok",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										},
										{
											"id": "96233cd4-1f4c-4e83-b74c-acd20e7a29fb",
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "3ea9f672-35cc-4905-b3b3-912b581ef3d6",
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "1c3191f8-d6be-46ab-896b-0c45b31f5516",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "1a4f25fd-45dc-4afb-8d9a-2dc7e67b42de",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "6f05ebb3-e6dc-4485-ae8f-66c288ec28b3",
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "5af6a438-a20c-4a5d-8e13-032593897d62",
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  },\n  {\n    \"buildingNumber\": \"<integer>\",\n    \"country\": \"<string>\",\n    \"houseNumber\": \"<integer>\",\n    \"id\": \"<long>\",\n    \"officeNumber\": \"<integer>\",\n    \"street\": \"<string>\",\n    \"town\": \"<string>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/address",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"address"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Add credit rules to bank",
									"id": "39bf400b-0ddd-4101-ad81-d0ea8e9c120d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank",
												":id",
												"creditRule"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										},
										"description": "1. Only new credit rules are available to add"
									},
									"response": [
										{
											"id": "6febb556-c164-4fb8-8e13-0442fa3d6059",
											"name": "Ok",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										},
										{
											"id": "5ef47b93-a60a-45ad-a592-786cbb854cb3",
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "67b1f953-314b-45a9-9be3-4329f305338e",
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "17a8229b-729a-45a8-a0d9-f8f777876498",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "06bd6f9d-c6f7-4a2a-a753-b3cf0b55297b",
											"name": "Forbidden",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "87897222-cd96-497f-b213-4d51f26f07eb",
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "3bde6624-bfbf-4ea7-a24f-f5d985a852b1",
											"name": "Internal server error",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  },\n  {\n    \"creditType\": {\n      \"deposit\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"id\": \"<long>\",\n    \"maxPeriod\": \"<long>\",\n    \"maxRate\": \"<double>\",\n    \"maxSum\": \"<long>\",\n    \"minPeriod\": \"<long>\",\n    \"minRate\": \"<double>\",\n    \"minSum\": \"<long>\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/api/v1/bank/:id/creditRule",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"bank",
														":id",
														"creditRule"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "3e0df4a6-70ec-4f72-afe0-3c60016309b4"
						},
						{
							"name": "Get all banks",
							"id": "8bdd8752-07ed-438a-8cff-d993c7fe2a6d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bank"
									],
									"query": [
										{
											"key": "page",
											"value": "0",
											"description": "page"
										},
										{
											"key": "size",
											"value": "10",
											"description": "size"
										},
										{
											"key": "sortField",
											"value": "id",
											"description": "sortField"
										},
										{
											"key": "sortDesc",
											"value": "false",
											"description": "sortDesc"
										}
									]
								}
							},
							"response": [
								{
									"id": "16c46863-86ec-4df1-8242-93ff69b9ad0f",
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"addresses\": [\n      {\n        \"buildingNumber\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"houseNumber\": \"<integer>\",\n        \"id\": \"<long>\",\n        \"officeNumber\": \"<integer>\",\n        \"street\": \"<string>\",\n        \"town\": \"<string>\"\n      },\n      {\n        \"buildingNumber\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"houseNumber\": \"<integer>\",\n        \"id\": \"<long>\",\n        \"officeNumber\": \"<integer>\",\n        \"street\": \"<string>\",\n        \"town\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"ownershipType\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"shortName\": \"<string>\"\n    },\n    \"phoneNumber\": \"<string>\",\n    \"rate\": \"<double>\"\n  },\n  {\n    \"addresses\": [\n      {\n        \"buildingNumber\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"houseNumber\": \"<integer>\",\n        \"id\": \"<long>\",\n        \"officeNumber\": \"<integer>\",\n        \"street\": \"<string>\",\n        \"town\": \"<string>\"\n      },\n      {\n        \"buildingNumber\": \"<integer>\",\n        \"country\": \"<string>\",\n        \"houseNumber\": \"<integer>\",\n        \"id\": \"<long>\",\n        \"officeNumber\": \"<integer>\",\n        \"street\": \"<string>\",\n        \"town\": \"<string>\"\n      }\n    ],\n    \"description\": \"<string>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"ownershipType\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"shortName\": \"<string>\"\n    },\n    \"phoneNumber\": \"<string>\",\n    \"rate\": \"<double>\"\n  }\n]"
								},
								{
									"id": "4a17e580-acb7-49c3-bc2d-eca70e41cf83",
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "a571f395-e27e-48f5-bdd3-467d37e8c3b4",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ec8c9fb3-a62c-44f2-bec5-4d2645e19583",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "0aa1e2eb-13c4-4a3c-b51f-d4de276d7060",
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "ab4f6ebb-c19b-4c64-8fec-556fcb45b6d1",
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Add bank",
							"id": "d90118f5-c5bc-4284-ba7e-68f6eaaf87d0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addresses\": [\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    },\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"ownershipType\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"shortName\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"rate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bank",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bank"
									]
								},
								"description": "1. Bank id must be null\n2. Add bank with addresses, do not add credit rules here\n3. Use new address with id = null or existed address with id != null\n4. Existed addresses won't be updated"
							},
							"response": [
								{
									"id": "92b61111-3459-4f2f-8b65-3aa8b5c1f272",
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"addresses\": [\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    },\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"ownershipType\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"shortName\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"rate\": \"<double>\"\n}"
								},
								{
									"id": "6bf4f0da-617f-43ff-adf0-3fb3806cd502",
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "73458c4f-ec2a-4e61-8cf3-131c7416b268",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "cf475739-522b-4b15-a015-aedba459faf3",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d618b73d-3ef9-431c-9f31-97f880eaaf27",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4cce73d7-0697-4d01-8ce1-d863cb7aee7b",
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2329bb2d-771e-407a-b81e-de5fe0f08f4c",
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update bank",
							"id": "d244b7f8-37c5-4fa5-9bcf-ed9a66052793",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"addresses\": [\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    },\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"ownershipType\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"shortName\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"rate\": \"<double>\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/bank",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"bank"
									]
								},
								"description": "1. Bank id must be not null\n2. Update bank with addresses, do not add credit rules here\n3. Use new address with id = null or existed address with id != null\n4. Existed addresses won't be updated"
							},
							"response": [
								{
									"id": "5c64ee2c-c76a-439f-813a-56b706ade1bf",
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"addresses\": [\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    },\n    {\n      \"buildingNumber\": \"<integer>\",\n      \"country\": \"<string>\",\n      \"houseNumber\": \"<integer>\",\n      \"id\": \"<long>\",\n      \"officeNumber\": \"<integer>\",\n      \"street\": \"<string>\",\n      \"town\": \"<string>\"\n    }\n  ],\n  \"description\": \"<string>\",\n  \"id\": \"<long>\",\n  \"name\": \"<string>\",\n  \"ownershipType\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"shortName\": \"<string>\"\n  },\n  \"phoneNumber\": \"<string>\",\n  \"rate\": \"<double>\"\n}"
								},
								{
									"id": "6c0a4b96-35c0-4e85-bef8-9d1e057478c5",
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "6c6ea304-ff36-43a9-ac99-203402984ba9",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "e1a0ee9c-5440-4404-a554-08296bc4e174",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "0414c780-a3c8-4ba7-be8b-7bf1ac1735b7",
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "a70e48ae-eac7-48e9-a763-47ef7c24a366",
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "e7ccec4d-b1e2-4595-8f74-e47f26a076d0",
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/bank",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"bank"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "ace74251-807a-4df9-992c-e3af7a8161d7"
				},
				{
					"name": "user",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get user by id",
									"id": "b2087eb3-2f53-45cf-ae52-ac6b462a5d24",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"id": "f023f92f-1602-44bb-8074-6440726f2f6d",
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"email\": \"<string>\",\n  \"id\": \"<long>\",\n  \"login\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"userData\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"patronymic\": \"<string>\",\n    \"profitPerMonth\": \"<long>\",\n    \"surname\": \"<string>\"\n  }\n}"
										},
										{
											"id": "74c4292a-aa13-4720-8e72-4fa6de31da85",
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "c8bb8ed3-b220-4e0e-879f-35d80d997505",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "8852d7d8-8783-4b32-aae9-f428ae830c8f",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "2be06d27-9205-475b-b6a1-5fb8c9280718",
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "5a38b4ae-de78-4f85-9092-a50ccb72aa86",
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete user by id",
									"id": "84264584-a7f5-475a-bb04-9e01a855a2bd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"id": "166f59ae-ac1d-40d5-bda7-8a2149fe3a43",
											"name": "Ok",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										},
										{
											"id": "a0c666da-9abd-4c59-93b8-e343371cc012",
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "6b3e4414-3af8-4351-86ee-1d5c1f8e3267",
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "5b4d3652-5057-4398-bd58-0dc271bbc79a",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "4741cc95-a754-497f-aa74-f97ba86bce5a",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "fa9aebd4-438c-4f4d-89d4-18fbc1da0488",
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/user/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"user",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "6e97a32a-77f9-40c2-ac90-9ebccb97806b"
						},
						{
							"name": "Get all users",
							"id": "31f76371-ea72-48e7-b3c9-23bfd15045cd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									],
									"query": [
										{
											"key": "page",
											"value": "0",
											"description": "page"
										},
										{
											"key": "size",
											"value": "10",
											"description": "size"
										},
										{
											"key": "sortField",
											"value": "id",
											"description": "sortField"
										},
										{
											"key": "sortDesc",
											"value": "false",
											"description": "sortDesc"
										}
									]
								}
							},
							"response": [
								{
									"id": "fcebe289-d653-40d0-b54f-fd87f8694f2f",
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  },\n  {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n]"
								},
								{
									"id": "6c91bf1b-cb7a-4c9a-b5a4-f12084c4a37f",
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "7868009c-ade7-4528-9550-112aea839bab",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "5a6d98ff-075b-4b03-ab38-01bcb8231c11",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "4984681e-64bf-483b-9849-48b66a9faf54",
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "a904e4e3-dbde-4139-ac7d-8b1af779a416",
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Add user",
							"id": "d286f46d-c01f-42a5-b03c-883c03902032",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"id\": \"<long>\",\n  \"login\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"userData\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"patronymic\": \"<string>\",\n    \"profitPerMonth\": \"<long>\",\n    \"surname\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"response": [
								{
									"id": "707d54c1-99b2-40e2-8576-737785182824",
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"<string>\",\n  \"id\": \"<long>\",\n  \"login\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"userData\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"patronymic\": \"<string>\",\n    \"profitPerMonth\": \"<long>\",\n    \"surname\": \"<string>\"\n  }\n}"
								},
								{
									"id": "8fae9077-1022-476d-b556-d14ecf73ed63",
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "dd8cbf03-7cb9-4753-90c7-c5c7e942ee63",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "009c5d80-7db0-44e5-a59a-c67f3d487638",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "590eb1a3-527b-4826-9a49-dac11ba6ae20",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "1dbbbf8f-2039-47e3-a6a0-0c13c7c4c9b6",
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2a64d060-8644-46dc-aa1f-3dfda66effd6",
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update user",
							"id": "b8f2d654-0185-4df8-bbec-eddbc3f25f3a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"id\": \"<long>\",\n  \"login\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"userData\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"patronymic\": \"<string>\",\n    \"profitPerMonth\": \"<long>\",\n    \"surname\": \"<string>\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"response": [
								{
									"id": "1a9037e8-aa68-4a5e-9899-0d443c8642a8",
									"name": "Ok",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"email\": \"<string>\",\n  \"id\": \"<long>\",\n  \"login\": \"<string>\",\n  \"passwordHash\": \"<string>\",\n  \"phoneNumber\": \"<string>\",\n  \"userData\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"patronymic\": \"<string>\",\n    \"profitPerMonth\": \"<long>\",\n    \"surname\": \"<string>\"\n  }\n}"
								},
								{
									"id": "daf36c61-78e6-4db0-84e8-f46d40a38a89",
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "8732978c-909c-44e8-87af-3d66aff274f2",
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "26b4e0b0-cc64-4481-8b98-00a2c9f45856",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "c02cce78-7b64-4224-8e40-be0c08749d45",
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "9a4dddb3-c81f-49c0-8108-3cad0f2775b6",
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "2412e1f3-277a-4219-98c4-a91f5bdb700e",
									"name": "Internal server error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"user"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "a45881c6-9c4f-4bd9-8269-55f6646536cb"
				},
				{
					"name": "userRequest",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get user request by id",
									"id": "64975518-fbe2-4aaa-93ad-57781757cef0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"id": "e4b1bd3c-3f9d-4a96-8ef4-3296db56b031",
											"name": "Ok",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}"
										},
										{
											"id": "1470264d-446f-4463-b080-5451f5b23f64",
											"name": "Bad request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "86cf865a-6e9a-47fe-b160-c7ed13377899",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "d2e44e34-cfc8-4567-9954-9446aff77a5c",
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "5795f80f-fc15-4723-9f44-38d4a9197f05",
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "988a1654-8c0a-4466-aa24-309628374d31",
											"name": "Internal server error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete user request by id",
									"id": "6416eaea-c098-448a-ac03-1c87754daa3f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) id"
												}
											]
										}
									},
									"response": [
										{
											"id": "0d864205-d598-4f44-a653-212aaad6c290",
											"name": "Ok",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "<object>"
										},
										{
											"id": "b8b639e7-c101-4ee6-ac60-870af256e82c",
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "393cf512-38d9-42bb-8651-3c64d84fa750",
											"name": "Bad request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										},
										{
											"id": "b0298037-86ac-4368-bdfe-17f7f8d2dc30",
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "2bb34843-71db-4339-9c7c-e54a74e1a842",
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"id": "1974a0a4-c770-476c-b27c-5bd77535a38b",
											"name": "Internal server error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/api/v1/userRequest/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"api",
														"v1",
														"userRequest",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
										}
									]
								}
							],
							"id": "367adcbb-bc9d-43d4-bc53-ccb508717990"
						},
						{
							"name": "Get all user requests",
							"id": "ec33c4ee-05fa-476f-a785-b2ccad132953",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"userRequest"
									],
									"query": [
										{
											"key": "page",
											"value": "0",
											"description": "page"
										},
										{
											"key": "size",
											"value": "10",
											"description": "size"
										},
										{
											"key": "sortField",
											"value": "id",
											"description": "sortField"
										},
										{
											"key": "sortDesc",
											"value": "false",
											"description": "sortDesc"
										}
									]
								}
							},
							"response": [
								{
									"id": "de056617-f9a4-454b-b1f6-8cffdb3df0b0",
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"creditRequests\": [\n      {\n        \"bank\": {\n          \"addresses\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"ownershipType\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"shortName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"phoneNumber\": \"<string>\",\n          \"rate\": \"<double>\"\n        },\n        \"creditRule\": {\n          \"creditType\": {\n            \"deposit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"id\": \"<long>\",\n          \"maxPeriod\": \"<long>\",\n          \"maxRate\": \"<double>\",\n          \"maxSum\": \"<long>\",\n          \"minPeriod\": \"<long>\",\n          \"minRate\": \"<double>\",\n          \"minSum\": \"<long>\"\n        },\n        \"id\": \"<long>\",\n        \"requestStatus\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"bank\": {\n          \"addresses\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"ownershipType\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"shortName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"phoneNumber\": \"<string>\",\n          \"rate\": \"<double>\"\n        },\n        \"creditRule\": {\n          \"creditType\": {\n            \"deposit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"id\": \"<long>\",\n          \"maxPeriod\": \"<long>\",\n          \"maxRate\": \"<double>\",\n          \"maxSum\": \"<long>\",\n          \"minPeriod\": \"<long>\",\n          \"minRate\": \"<double>\",\n          \"minSum\": \"<long>\"\n        },\n        \"id\": \"<long>\",\n        \"requestStatus\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"deposit\": \"<boolean>\",\n    \"id\": \"<long>\",\n    \"period\": \"<long>\",\n    \"sum\": \"<long>\",\n    \"user\": {\n      \"email\": \"<string>\",\n      \"id\": \"<long>\",\n      \"login\": \"<string>\",\n      \"passwordHash\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"userData\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"patronymic\": \"<string>\",\n        \"profitPerMonth\": \"<long>\",\n        \"surname\": \"<string>\"\n      }\n    }\n  },\n  {\n    \"creditRequests\": [\n      {\n        \"bank\": {\n          \"addresses\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"ownershipType\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"shortName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"phoneNumber\": \"<string>\",\n          \"rate\": \"<double>\"\n        },\n        \"creditRule\": {\n          \"creditType\": {\n            \"deposit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"id\": \"<long>\",\n          \"maxPeriod\": \"<long>\",\n          \"maxRate\": \"<double>\",\n          \"maxSum\": \"<long>\",\n          \"minPeriod\": \"<long>\",\n          \"minRate\": \"<double>\",\n          \"minSum\": \"<long>\"\n        },\n        \"id\": \"<long>\",\n        \"requestStatus\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        }\n      },\n      {\n        \"bank\": {\n          \"addresses\": [\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          ],\n          \"description\": \"<string>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"ownershipType\": {\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"shortName\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"phoneNumber\": \"<string>\",\n          \"rate\": \"<double>\"\n        },\n        \"creditRule\": {\n          \"creditType\": {\n            \"deposit\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"name\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          \"id\": \"<long>\",\n          \"maxPeriod\": \"<long>\",\n          \"maxRate\": \"<double>\",\n          \"maxSum\": \"<long>\",\n          \"minPeriod\": \"<long>\",\n          \"minRate\": \"<double>\",\n          \"minSum\": \"<long>\"\n        },\n        \"id\": \"<long>\",\n        \"requestStatus\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        }\n      }\n    ],\n    \"deposit\": \"<boolean>\",\n    \"id\": \"<long>\",\n    \"period\": \"<long>\",\n    \"sum\": \"<long>\",\n    \"user\": {\n      \"email\": \"<string>\",\n      \"id\": \"<long>\",\n      \"login\": \"<string>\",\n      \"passwordHash\": \"<string>\",\n      \"phoneNumber\": \"<string>\",\n      \"userData\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"patronymic\": \"<string>\",\n        \"profitPerMonth\": \"<long>\",\n        \"surname\": \"<string>\"\n      }\n    }\n  }\n]"
								},
								{
									"id": "4885af04-5521-4a78-9fb2-e94b4b7be99e",
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "75fed15d-fdab-41bd-b933-696ff02c324f",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "03760428-c6ed-4955-902d-a8dcfb9b04f2",
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d7b46bb3-862f-414b-aa39-19cc428e285f",
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "23d23f6c-84e7-4526-9e84-66f5ad76e5f9",
									"name": "Internal server error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest?page=0&size=10&sortField=id&sortDesc=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "10"
												},
												{
													"key": "sortField",
													"value": "id"
												},
												{
													"key": "sortDesc",
													"value": "false"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Add user request",
							"id": "c722871d-e9b2-4399-a9e2-1f621ce7dcbe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/userRequest",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"userRequest"
									]
								},
								"description": "1. creditRequests must be null or empty"
							},
							"response": [
								{
									"id": "6ae8bb6f-113c-482a-85c2-a9b8a03f5270",
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}"
								},
								{
									"id": "0f88f711-e15c-4df1-918d-c01bfabcba6c",
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "7c701603-3cb9-4c4a-a883-f067688c1259",
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								},
								{
									"id": "d6323c18-3919-428e-9fd2-d47c7962457e",
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "57db6239-c5ac-4658-a0fb-f0294cb4083b",
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "bdbbf140-0ccc-4bcc-a149-b64bdcbfc4b9",
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"id": "d5450828-72b2-4c05-a30b-ce660183b2e7",
									"name": "Internal server error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"creditRequests\": [\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    },\n    {\n      \"bank\": {\n        \"addresses\": [\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          },\n          {\n            \"buildingNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"country\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"houseNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"id\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"officeNumber\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"street\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            },\n            \"town\": {\n              \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n            }\n          }\n        ],\n        \"description\": \"<string>\",\n        \"id\": \"<long>\",\n        \"name\": \"<string>\",\n        \"ownershipType\": {\n          \"id\": \"<long>\",\n          \"name\": \"<string>\",\n          \"shortName\": \"<string>\"\n        },\n        \"phoneNumber\": \"<string>\",\n        \"rate\": \"<double>\"\n      },\n      \"creditRule\": {\n        \"creditType\": {\n          \"deposit\": \"<boolean>\",\n          \"id\": \"<long>\",\n          \"name\": \"<string>\"\n        },\n        \"id\": \"<long>\",\n        \"maxPeriod\": \"<long>\",\n        \"maxRate\": \"<double>\",\n        \"maxSum\": \"<long>\",\n        \"minPeriod\": \"<long>\",\n        \"minRate\": \"<double>\",\n        \"minSum\": \"<long>\"\n      },\n      \"id\": \"<long>\",\n      \"requestStatus\": {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    }\n  ],\n  \"deposit\": \"<boolean>\",\n  \"id\": \"<long>\",\n  \"period\": \"<long>\",\n  \"sum\": \"<long>\",\n  \"user\": {\n    \"email\": \"<string>\",\n    \"id\": \"<long>\",\n    \"login\": \"<string>\",\n    \"passwordHash\": \"<string>\",\n    \"phoneNumber\": \"<string>\",\n    \"userData\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"patronymic\": \"<string>\",\n      \"profitPerMonth\": \"<long>\",\n      \"surname\": \"<string>\"\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/api/v1/userRequest",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"api",
												"v1",
												"userRequest"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
								}
							]
						}
					],
					"id": "30584783-9992-4c82-bf8a-d6193a39b817"
				},
				{
					"name": "Update status",
					"id": "77ba1ef6-48d7-4c27-a501-8cb37cfb4bf0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"creditRequest",
								"status"
							],
							"query": [
								{
									"key": "id",
									"value": "<long>",
									"description": "(Required) id"
								},
								{
									"key": "statusId",
									"value": "<long>",
									"description": "(Required) statusId"
								}
							]
						}
					},
					"response": [
						{
							"id": "4d804b39-7451-42cc-99ac-8947df274b04",
							"name": "Ok",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "<object>"
						},
						{
							"id": "85132e6c-4dff-4f1e-8be3-29c701450b89",
							"name": "Created",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "45b4ea8d-3eb4-41ae-8958-44b92d9a8f92",
							"name": "Bad request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
						},
						{
							"id": "b7c6c40b-de5d-459b-b4fa-a60aa4fbaca1",
							"name": "Unauthorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "783b1068-82eb-4202-adea-b7415f75370a",
							"name": "Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "f0cb305e-642e-4875-b29e-520fce1b454c",
							"name": "Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"id": "601fcd3c-162d-4eee-9b94-51d60970c3a4",
							"name": "Internal server error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/creditRequest/status?id=<long>&statusId=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"creditRequest",
										"status"
									],
									"query": [
										{
											"key": "id",
											"value": "<long>"
										},
										{
											"key": "statusId",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "*/*"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\",\n  \"stackTrace\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "3d6225ea-6a3d-41a4-982c-4d8e98b2e7c8"
		}
	],
	"variable": [
		{
			"id": "94eee949-29cf-4b85-8d45-724f1dc2c922",
			"key": "baseUrl",
			"value": "//localhost:38080",
			"type": "string"
		}
	]
}